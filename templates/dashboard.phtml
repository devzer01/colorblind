<!DOCTYPE html>
<html lang="en">
<head>
    <meta name="viewport" content="width=device-width, user-scalable=no, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, minimal-ui" />
    <link rel="stylesheet" href="//stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css" />
    <meta charset="UTF-8">
    <link type="text/css" rel="stylesheet" href="//cdn.firebase.com/libs/firebaseui/3.1.1/firebaseui.css" />
    <script src="//code.jquery.com/jquery-1.11.1.min.js"></script>
    <script src="//code.jquery.com/mobile/1.4.5/jquery.mobile-1.4.5.min.js"></script>
    <script src="//www.gstatic.com/firebasejs/5.4.0/firebase-app.js"></script>
    <script src="//www.gstatic.com/firebasejs/5.4.0/firebase-auth.js"></script>
    <script src="//cdn.firebase.com/libs/firebaseui/3.1.1/firebaseui.js"></script>
    <script type="text/javascript" src="/js/entrance.js"></script>
    <script type="text/javascript" src="/js/recordWorker.js"></script>
    <script type="text/javascript" src="/js/recorder.js"></script>
    <script type="text/javascript" src="/js/audio.js"></script>

    <title>::cognetic.io::</title>

</head>
<body>


<button onclick="startRecording(this);">record</button>
<button onclick="stopRecording(this);">stop</button>

<span id="fooba"></span>
<div id="imgResults"></div>

<script type="application/javascript">
    function __log(e, data) {

    }

    var audio_context;
    var recorder;

    function startUserMedia(stream) {
        audio_context = new AudioContext;

        var input = audio_context.createMediaStreamSource(stream);
        input.connect(audio_context.destination);
        recorder = new Recorder(input);
        __log('Recorder initialised.');
    }

    function startRecording(button) {
        recorder.record();
        __log('Recording...');
    }

    function stopRecording(button) {
        recorder.stop();
        __log('Stopped recording.');

        // create WAV download link using audio data blob
        createDownloadLink();

    }

    function imageSearch(txt, data) {
        var imgs = data.slice(0,2).map(function (elm) {
            var i = document.createElement("img");
            i.src = elm;
            return i;
        });

        var results = document.getElementById("imgResults");
        for (var i = imgs.length -1; i > 0; i--) {
            results.appendChild(imgs[i]);
        }
    }


    function createDownloadLink() {
        recorder.exportMonoWAV(function (blob) {

            var fd = new FormData();
            fd.append('fname', 'test.wav');
            fd.append('data', blob);
            $.ajax({
                type: 'POST',
                url: '/audio',
                data: fd,
                processData: false,
                contentType: false
            }).done(function(data) {
                for (var x =0; x < data.length; x++) {
                    $.get("/concept?w=" + data[x], imageSearch.bind(null, data[x]));
                }
                document.getElementById("fooba").innerText = JSON.stringify(data);
            });
        }, 'pcm');
    }

    window.onload = function init() {
        try {
            // webkit shim
            window.AudioContext = window.AudioContext || window.webkitAudioContext;
            window.URL = window.URL || window.webkitURL;
            navigator.mediaDevices.getUserMedia({audio: true, video: false}).then(startUserMedia);

        } catch (e) {
            alert('No web audio support in this browser!');
        }
    };
</script>



</body>
</html>
